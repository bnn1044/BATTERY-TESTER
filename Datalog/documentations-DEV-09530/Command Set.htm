


<!DOCTYPE html>
<html>
  <head>
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="chrome=1">
        <title>Command Set - GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />

    
    

    <meta content="authenticity_token" name="csrf-param" />
<meta content="gYx8NNdwY6pH0ZeM1TSkE5JpMV9JWg1+TePShvgzu0w=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/stylesheets/bundles/github-4a66179db6f6804b8f0d60c4bb581271fadd27cb.css" media="screen" rel="stylesheet" type="text/css" />
    

    <script src="https://a248.e.akamai.net/assets.github.com/javascripts/bundles/jquery-e46225f266eba00902b2e5b66fe6fe6a484fb242.js" type="text/javascript"></script>
    <script src="https://a248.e.akamai.net/assets.github.com/javascripts/bundles/github-a6e5ad89d200a038912bb6e9cb13215234fa1498.js" type="text/javascript"></script>
    

      <script src="https://a248.e.akamai.net/assets.github.com/javascripts/bundles/wiki-1c139ac7d77d6f4dca973fc264bb263cffb3a1f2.js" type="text/javascript"></script>

    <meta name="description" content="OpenLog - Open Source Hardware Datalogger" />
  <link href="https://github.com/nseidle/OpenLog/commits/master.atom" rel="alternate" title="Recent Commits to OpenLog:master" type="application/atom+xml" />

  </head>


  <body class="logged_out  windows  env-production ">
    


    

      <div id="header" class="true clearfix">
        <div class="container clearfix">
          <a class="site-logo" href="https://github.com">
            <!--[if IE]>
            <img alt="GitHub" class="github-logo" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7.png?1323882717" />
            <img alt="GitHub" class="github-logo-hover" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7-hover.png?1324325376" />
            <![endif]-->
            <img alt="GitHub" class="github-logo-4x" height="30" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x.png?1323882717" />
            <img alt="GitHub" class="github-logo-4x-hover" height="30" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x-hover.png?1324325376" />
          </a>

                  <!--
      make sure to use fully qualified URLs here since this nav
      is used on error pages on other domains
    -->
    <ul class="top-nav logged_out">
        <li class="pricing"><a href="https://github.com/plans">Signup and Pricing</a></li>
        <li class="explore"><a href="https://github.com/explore">Explore GitHub</a></li>
      <li class="features"><a href="https://github.com/features">Features</a></li>
        <li class="blog"><a href="https://github.com/blog">Blog</a></li>
      <li class="login"><a href="https://github.com/login?return_to=%2Fnseidle%2FOpenLog%2Fwiki%2FCommand-Set">Login</a></li>
    </ul>



          
        </div>
      </div>

      

            <div class="site">
      <div class="container">
        <div class="pagehead repohead instapaper_ignore readability-menu">


        <div class="title-actions-bar">
          <h1>
            <a href="/nseidle">nseidle</a> /
            <strong><a href="/nseidle/OpenLog" class="js-current-repository">OpenLog</a></strong>
          </h1>
          



              <ul class="pagehead-actions">


          <li><a href="/login?return_to=%2Fnseidle%2FOpenLog" class="minibutton btn-watch watch-button entice tooltipped leftwards" rel="nofollow" title="You must be logged in to use this feature"><span><span class="icon"></span>Watch</span></a></li>
          <li><a href="/login?return_to=%2Fnseidle%2FOpenLog" class="minibutton btn-fork fork-button entice tooltipped leftwards" rel="nofollow" title="You must be logged in to use this feature"><span><span class="icon"></span>Fork</span></a></li>


      <li class="repostats">
        <ul class="repo-stats">
          <li class="watchers ">
            <a href="/nseidle/OpenLog/watchers" title="Watchers" class="tooltipped downwards">
              53
            </a>
          </li>
          <li class="forks">
            <a href="/nseidle/OpenLog/network" title="Forks" class="tooltipped downwards">
              15
            </a>
          </li>
        </ul>
      </li>
    </ul>

        </div>

          

  <ul class="tabs">
    <li><a href="/nseidle/OpenLog" highlight="repo_sourcerepo_downloadsrepo_commitsrepo_tagsrepo_branches">Code</a></li>
    <li><a href="/nseidle/OpenLog/network" highlight="repo_networkrepo_fork_queue">Network</a>
    <li><a href="/nseidle/OpenLog/pulls" highlight="repo_pulls">Pull Requests <span class='counter'>0</span></a></li>

      <li><a href="/nseidle/OpenLog/issues" highlight="repo_issues">Issues <span class='counter'>7</span></a></li>

      <li><a href="/nseidle/OpenLog/wiki" class="selected" highlight="repo_wiki">Wiki <span class='counter'>9</span></a></li>

    <li><a href="/nseidle/OpenLog/graphs" highlight="repo_graphsrepo_contributors">Stats &amp; Graphs</a></li>

  </ul>

  
  
  
  <div class="subnav-bar">
  <ul class="subnav">
    <li><a href="/nseidle/OpenLog/wiki">Home</a></li>
    <li><a href="/nseidle/OpenLog/wiki/_pages">Pages</a></li>
    <li><a href="/nseidle/OpenLog/wiki/_history">Wiki History</a></li>
    <li><a href="/nseidle/OpenLog/wiki/_access">Git Access</a></li>
  </ul>
</div>


          

        </div><!-- /.repohead -->

        




<div id="wiki-wrapper" class="page">
<div id="head">
  <h1 class="instapaper_title">Command Set</h1>
  <ul class="wiki-actions readability-extra">
    <li class="gollum-minibutton"><a href="/nseidle/OpenLog/wiki/Command-Set/_history"
       class="action-page-history">
       Page History
     </a></li>
  </ul>
</div>
<div id="wiki-content">
  <div class="wrap">
  <div id="wiki-body" class="gollum-textile-content instapaper_body">
    <div class="markdown-body">
      <p>Upon power up, in default ‘NewLog’ mode, OpenLog will output ‘<strong>12&lt;</strong>’ (note the less than sign) at which time you can start throwing characters at it. Those characters will be recorded to <span class="caps">LOG</span>#####.<span class="caps">TXT</span>. Press Ctrl+z three consecutive times will cause OpenLog to exit record mode and drop into command mode. Command mode is signified with a ‘<strong>&gt;</strong>’ (greater than) sign. You can then enter the following commands:</p>
<p>Remember, once you’re in command mode the list of available commands can be brought up by typing ‘?’.</p>
<h3>Basic Commands</h3>
<p><strong>new</strong> <em>file</em>: Creates a new file (named <em>file</em> ) in the current directory.</p>
<ul>
<li>Ex: <strong>new file1.txt</strong>
</li>
</ul><p><strong>append</strong> <em>file</em>: Appends text to the end of <em>file</em>. Serial data is then read in from the <span class="caps">UART</span> in a stream and is not echoed. This is the most common way to use the logger. To exit this state, send the command Ctrl+z (<span class="caps">ASCII</span> 26) and OpenLog will return to the ‘&gt;’ prompt. If the file does not exist it will be created.</p>
<ul>
<li>Ex: <strong>append newfile.csv</strong>
</li>
</ul><p><strong>write</strong> <em>file</em> <ins>offset</ins>: Writes text to <em>file</em> starting from the location <ins>offset</ins> within the file. The text is read from the <span class="caps">UART</span>, line by line, and echoed back. To exit this state, send an empty line.</p>
<ul>
<li>Ex: <strong>write logs.f17 516</strong>
</li>
</ul><p><strong>rm</strong> <em>file</em>: Deletes <em>file</em> from the current directory. Wild cards are supported starting in version 1.2.</p>
<ul>
<li>Ex: <strong>rm me.txt</strong>
	<ul>
<li>In v2.4 and above: You can remove directories and any files that may be contained in them.</li>
		<li>Ex: <strong>rm -rf mydirectory</strong>
</li>
	</ul>
</li>
</ul><p><strong>size</strong> <em>file</em>: Displays size of <em>file</em> in bytes.</p>
<ul>
<li>Ex: <strong>size LOG00004.txt</strong>
</li>
	<li>Output: <strong>11</strong>
</li>
</ul><h3>Directory Manipulation</h3>
<p><strong>ls</strong>: Shows the content of the current directory. Wild cards are supported starting in version 1.2.</p>
<ul>
<li>Ex: <strong>ls</strong>
</li>
</ul><p><strong>md</strong> <em>directory</em>: Creates a sub directory in the current directory.</p>
<ul>
<li>Ex: <strong>md july_14</strong>
</li>
</ul><p><strong>cd</strong> <em>directory</em>: Change to a sub directory</p>
<ul>
<li>Ex: <strong>cd day_22</strong>
</li>
</ul><p><strong>cd ..</strong>: Change to lower directory in tree. This is a bit weird because I’m used to “cd..”. There is a space in between <strong>cd</strong> and <strong>..</strong> to allow the string parser to see the <strong>cd</strong> command.</p>
<ul>
<li>Ex: <strong>cd ..</strong>
</li>
</ul><p><strong>rm</strong> <em>directory</em>: Remove a sub directory</p>
<ul>
<li>Ex: <strong>rm temps</strong>
</li>
	<li>Note that the directory must be empty for this command to work. To remove a directory with files in it, use the <strong>rm -rf temps</strong> command.</li>
</ul><h3>Viewing Files</h3>
<p><strong>read</strong> <em>file</em> <ins>start</ins> length <span class="caps">TYPE</span>: (New in v1.2) Outputs the contents of a file in visible form of a <em>file</em> starting from <ins>start</ins> and going to length. There are three TYPEs of output, <span class="caps">ASCII</span> = 1, <span class="caps">HEX</span> = 2, and <span class="caps">RAW</span> = 3. You may leave off any of the arguments.</p>
<ul>
<li>Ex: <strong>read LOG00004.<span class="caps">TXT</span> 0 5</strong>
</li>
	<li>Output: <strong>Accel</strong>
</li>
	<li>Ex: <strong>read LOG00004.<span class="caps">TXT</span></strong>
</li>
	<li>Output: <strong>Accelerometer X=12 Y=215 Z=317</strong>
</li>
	<li>Ex: <strong>read LOG00004.<span class="caps">TXT</span> 1 5 2</strong>
</li>
	<li>Output: <strong>63 63 65 6C</strong>
</li>
	<li>Ex: <strong>read LOG00137.<span class="caps">TXT</span> 0 50 3</strong>
</li>
	<li>Output: <strong>André—<br>
       -þ Extended Character Test</strong> (note that printing option <span class="caps">RAW</span> will depend on how your terminal will handle the extended characters)</li>
</ul><p><strong>cat</strong> <em>file</em>: Writes the contents of a file in hex to the screen for viewing. This is sometimes helpful to see that a file is recording correctly without having to pull the SD card and view the file on a computer.</p>
<ul>
<li>Ex: <strong>cat LOG00004.txt</strong>
</li>
	<li>Output: <br><strong>00000000: 41 63 63 65 6c 3a 20 31</strong><br><strong>00000008: 32 32 0d</strong>
</li>
</ul><h3>System Settings</h3>
<p>Remember, on version 1.6 and above, system configuration can be done via the <strong><span class="caps">CONFIG</span>.<span class="caps">TXT</span></strong> file.</p>
<p><strong>echo</strong> &lt;<em>on/off</em>&gt;: New in version 2.3. This command allows you to turn on or off echo. This command is not stored in memory and defaults to <strong>echo on</strong> at each power up. By turning echo off, OpenLog will not echo typed text on the command prompt. This is helpful if OpenLog is embedded into a system where the system does not read back the echoed characters. If you are playing with OpenLog via a terminal, you probably want to leave <strong>echo on</strong> so that you can see the text you are sending to OpenLog. <em>Note</em>: During an append you will never see the text you are typing. This is because it takes too much system resources to echo back the text that is being received.</p>
<p><strong>verbose</strong> &lt;<em>on/off</em>&gt;: New in version 2.3. This command turns on or off verbose error reporting. This command is not stored in memory and defaults to <strong>verbose on</strong> at each power up. By turning off verbose errors, OpenLog will respond with only a ‘!’ if there is an error rather that “unknown command: oodf” (for example). This ‘!’ character is easier for embedded systems to parse than the full error. If you are playing with OpenLog via a terminal, you probably want to leave <strong>verbose on</strong> so that you can see full error messages.</p>
<p><strong>baud</strong>: Brings up a system menu to select a baud rate. <strong>9600 8N1 is the default</strong>. You will be able to select either <strong>2400</strong>, <strong>4800</strong>, <strong>9600</strong>, <strong>19200</strong>, <strong>57600</strong>, and <strong>115200</strong> bit per second baud rates. Additional baud rates are achievable but these are the most common baud rates <span class="caps">IMO</span>, so that’s all I’ve added. The baud rate selection is immediate and OpenLog requires a power cycle for the settings to take effect. The baud rate is stored to <span class="caps">EEPROM</span> and is loaded every time OpenLog powers up.</p>
<p>Remember, if you get OpenLog stuck into an unknown baud rate, there is a safety mechanism built-in. Tie the RX pin to ground and power up OpenLog. You should see the LEDs blink back and forth for 2 seconds, then blink in unison. Now power down OpenLog and remove the RX/<span class="caps">GND</span> jumper. OpenLog is now reset to <strong>9600bps</strong> with an escape character of ‘ctrl+z’ pressed three consecutive times.</p>
<p><strong>set</strong>: Brings up a system menu to select the boot up mode. These settings will occur at the next power-on and are stored in non-volatile <span class="caps">EEPROM</span>:</p>
<ol>
<li>
<strong>New File Logging</strong> (default) : This mode creates a new file each time OpenLog powers up. OpenLog will transmit ‘<strong>1</strong>’ (<span class="caps">UART</span> is alive) then ‘<strong>2</strong>’ (SD card is initialized) then ‘<strong>&lt;</strong>’ (OpenLog is ready to receive data). All data will be recorded to a <span class="caps">LOG</span>#####.txt. The ##### number increases every time you power up OpenLog. This number is stored in <span class="caps">EEPROM</span> and can be reset from the <strong>set</strong> menu. All received characters are not echoed. You can exit this mode and enter command mode by sending Ctrl+z (<span class="caps">ASCII</span> 26). All buffered data will be stored. <br><strong>Note:</strong> If too many logs have been created (65533 logs is max), OpenLog will output error ‘<strong>!Too many logs:1!</strong>’, then exit this mode, then it will drop to Command Prompt. If you are parsing OpenLog output, look for ‘<strong>12&lt;</strong>’ before sending serial strings. If you see ‘<strong>12!</strong>Too many logs…’ instead, you know there has been an error.</li>
	<li>
<strong>Append File Logging</strong>: Also known as sequential mode. This mode creates a file called <span class="caps">SEQLOG</span>.txt (if it is not already there) and appends any received data to the file. OpenLog will transmit ‘<strong>12&lt;</strong>’ at which time OpenLog is ready to receive data. All received characters are not echoed. You can exit this mode and enter command mode by sending Ctrl+z (<span class="caps">ASCII</span> 26). All buffered data will be stored.</li>
	<li>
<strong>Command Prompt</strong>: OpenLog will transmit ‘<strong>12&gt;</strong>’ at which time OpenLog is ready to receive <em>commands</em>. Note the <em>“greater than”</em> sign indicates OpenLog is now ready to receive commands, not data. You can easily create files and append data to files from the command prompt. This however requires a few more steps and some serial parsing (to check for errors) so we do not set this mode by default.</li>
	<li>
<strong>Reset New File Number</strong>: Selecting this option will reset the log file number to LOG000.txt. This is helpful if you’ve recently cleared out an SD card and want the log file numbers to start over again.</li>
	<li>
<strong>New escape character</strong> (new in v1.51): OpenLog will then prompt user to enter a character such as ctrl+z or ‘<strong>$</strong>’. This will be the new escape character. This setting is reset to ctrl+z during an emergency reset.</li>
	<li>
<strong>Number of escape characters</strong> (new in v1.51): OpenLog will then prompt user to enter a character such as 1 or 3 or 17 (that’s just silly!). This will be the new number of escape characters needed to drop to command mode. For example, 3 will require the user to hit ctrl+z three times to get to command mode. This setting is reset to 3 during an emergency reset.</li>
</ol><p><strong>Escape characters explained:</strong><br>
Original OpenLog firmware (versions v1.5 and below) required you to press ctrl+z to enter command mode. What we found was that many users had OpenLog attached to the TX pin on an Arduino. When you hit the ‘Upload’ button in the Arduino <span class="caps">IDE</span>, serial characters start flowing to the Arduino board in rapid succession – the Arduino is reprogramming! The problem is that there is a strong chance that one of these reprogramming characters will be ctrl+z (<span class="caps">ASCII</span> 26) causing OpenLog (who is diligently logging all these crazy characters as it ‘listens’ to the TX pin) to drop to command mode. Now when you go to run your sketch, OpenLog is not responding? That’s because it’s sitting in command mode. Firmware v1.51 and above fixes this issue by setting the escape sequence to three ctrl+z characters. You have to hit ctrl+z <em>three</em> times to get it to drop to command mode. During a bootload of an Arduino, it is highly unlikely (but still possible) to see three such characters stream by. Both the type of escape character and the number of required escape characters are user configurable. ‘<strong>$$$</strong>’ is a common configuration string for old AT systems. We decided to stick with ctrl+z because that’s what we’ve been using since the beginning. <strong>Remember:</strong> if things get out of hand and you forget what escape character you’ve set, or how many you need to hit, you can always do an emergency reset by holding the RX pin to ground during a power up. This will cause OpenLog to default to 9600bps, with escape character of ctrl+z sent three times.</p>
<p><strong>Note for Arduino users:</strong><br>
If you are using openlog with either the inbuilt serial library, or new software serial library, you may have noticed that command mode appears to be not working. This is because Serial.println appears to send both newline <span class="caps">AND</span> carriage return. To overcome this use the n.print(“Your command\r”) as shown, with a \r (or separately send the value 13)</p>
<h3>Low Level Commands</h3>
<p><strong>disk</strong>: Shows card manufacturer, status, file system capacity and free storage space.</p>
<p><strong>init</strong>: Re-initializes the and re-opens the SD card. This is helpful if the SD card stops responding.</p>
<p><strong>sync</strong>: Synchronize, or write the current contents of the buffer to the SD card. This command is useful if you have less than 512 characters in the buffer and want to have them committed to the SD card.</p>
<p><strong>reset</strong>: This will cause OpenLog to jump to location zero and re-run bootloader and then init code. This command is helpful if you need to edit the config file then have OpenLog reset and start using the new configuration. It’s not a completely clean reset (watchdog would be better but does not currently work), so use with some caution.</p>
<h3>Configuring OpenLog via a File</h3>
<p>As of firmware version 1.6 and above, you no longer need to use a terminal to reconfigure OpenLog. Simply edit the <strong><span class="caps">CONFIG</span>.<span class="caps">TXT</span></strong> file (capitalization is important) and change <em>9600</em> to <em>57600</em> and OpenLog will operate at 57600bps the next time you power it up. This is pretty handy! Rather than hooking up a serial connection and opening up a terminal window, you can now edit many of the settings on OpenLog via an SD card reader and a text editor.</p>
<p>See the <a href="https://github.com/nseidle/OpenLog/wiki/Config-File">Config File</a> page for more information.</p>
<p><strong>OpenLog Wiki Pages:</strong></p>
<ul>
<li><a class="internal present" href="/nseidle/OpenLog/wiki/Command-Set">Command Set</a></li>
	<li><a class="internal present" href="/nseidle/OpenLog/wiki/Config-File">Config File</a></li>
	<li><a class="internal present" href="/nseidle/OpenLog/wiki/Datasheet">Datasheet</a></li>
	<li><a class="internal present" href="/nseidle/OpenLog/wiki/Design-Files">Design Files</a></li>
	<li><a class="internal present" href="/nseidle/OpenLog/wiki/Flashing-Firmware">Flashing Firmware</a></li>
	<li><a class="internal present" href="/nseidle/OpenLog/wiki/Logger-Comparison">Logger Comparison</a></li>
</ul>
    </div>
  </div>
  </div>

</div>
<div id="gollum-footer">
  <p id="last-edit">
    Last edited by nseidle, <time class="js-relative-date" datetime="2011-11-09T09:52:39-08:00" title="2011-11-09 09:52:39">November 09, 2011</time>
  </p>
</div>
</div>


      </div>
      <div class="context-overlay"></div>
    </div>


    <!-- footer -->
    <div id="footer" >
      
  <div class="upper_footer">
     <div class="container clearfix">

       <!--[if IE]><h4 id="blacktocat_ie">GitHub Links</h4><![endif]-->
       <![if !IE]><h4 id="blacktocat">GitHub Links</h4><![endif]>

       <ul class="footer_nav">
         <h4>GitHub</h4>
         <li><a href="https://github.com/about">About</a></li>
         <li><a href="https://github.com/blog">Blog</a></li>
         <li><a href="https://github.com/features">Features</a></li>
         <li><a href="https://github.com/contact">Contact &amp; Support</a></li>
         <li><a href="https://github.com/training">Training</a></li>
         <li><a href="http://enterprise.github.com/">GitHub Enterprise</a></li>
         <li><a href="http://status.github.com/">Site Status</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Tools</h4>
         <li><a href="http://get.gaug.es/">Gauges: Analyze web traffic</a></li>
         <li><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></li>
         <li><a href="https://gist.github.com">Gist: Code snippets</a></li>
         <li><a href="http://mac.github.com/">GitHub for Mac</a></li>
         <li><a href="http://mobile.github.com/">Issues for iPhone</a></li>
         <li><a href="http://jobs.github.com/">Job Board</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Extras</h4>
         <li><a href="http://shop.github.com/">GitHub Shop</a></li>
         <li><a href="http://octodex.github.com/">The Octodex</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Documentation</h4>
         <li><a href="http://help.github.com/">GitHub Help</a></li>
         <li><a href="http://developer.github.com/">Developer API</a></li>
         <li><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></li>
         <li><a href="http://pages.github.com/">GitHub Pages</a></li>
       </ul>

     </div><!-- /.site -->
  </div><!-- /.upper_footer -->

<div class="lower_footer">
  <div class="container clearfix">
    <!--[if IE]><div id="legal_ie"><![endif]-->
    <![if !IE]><div id="legal"><![endif]>
      <ul>
          <li><a href="https://github.com/site/terms">Terms of Service</a></li>
          <li><a href="https://github.com/site/privacy">Privacy</a></li>
          <li><a href="https://github.com/security">Security</a></li>
      </ul>

      <p>&copy; 2012 <span id="_rrt" title="0.07363s from fe11.rs.github.com">GitHub</span> Inc. All rights reserved.</p>
    </div><!-- /#legal or /#legal_ie-->

      <div class="sponsor">
        <a href="http://www.rackspace.com" class="logo">
          <img alt="Dedicated Server" height="36" src="https://a248.e.akamai.net/assets.github.com/images/modules/footer/rackspace_logo.png?v2" width="38" />
        </a>
        Powered by the <a href="http://www.rackspace.com ">Dedicated
        Servers</a> and<br/> <a href="http://www.rackspacecloud.com">Cloud
        Computing</a> of Rackspace Hosting<span>&reg;</span>
      </div>
  </div><!-- /.site -->
</div><!-- /.lower_footer -->

    </div><!-- /#footer -->

    

<div id="keyboard_shortcuts_pane" class="instapaper_ignore readability-extra" style="display:none">
  <h2>Keyboard Shortcuts <small><a href="#" class="js-see-all-keyboard-shortcuts">(see all)</a></small></h2>

  <div class="columns threecols">
    <div class="column first">
      <h3>Site wide shortcuts</h3>
      <dl class="keyboard-mappings">
        <dt>s</dt>
        <dd>Focus site search</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>?</dt>
        <dd>Bring up this help dialog</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column middle" style='display:none'>
      <h3>Commit list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>c <em>or</em> o <em>or</em> enter</dt>
        <dd>Open commit</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>y</dt>
        <dd>Expand URL to its canonical form</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column last" style='display:none'>
      <h3>Pull request list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>o <em>or</em> enter</dt>
        <dd>Open issue</dd>
      </dl>
    </div><!-- /.columns.last -->

  </div><!-- /.columns.equacols -->

  <div style='display:none'>
    <div class="rule"></div>

    <h3>Issues</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>x</dt>
          <dd>Toggle selection</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column middle">
        <dl class="keyboard-mappings">
          <dt>I</dt>
          <dd>Mark selection as read</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>U</dt>
          <dd>Mark selection as unread</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>e</dt>
          <dd>Close selection</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>y</dt>
          <dd>Remove selection from view</dd>
        </dl>
      </div><!-- /.column.middle -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>c</dt>
          <dd>Create issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Create label</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>i</dt>
          <dd>Back to inbox</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>u</dt>
          <dd>Back to issues</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>/</dt>
          <dd>Focus issues search</dd>
        </dl>
      </div>
    </div>
  </div>

  <div style='display:none'>
    <div class="rule"></div>

    <h3>Issues Dashboard</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
      </div><!-- /.column.first -->
    </div>
  </div>

  <div style='display:none'>
    <div class="rule"></div>

    <h3>Network Graph</h3>
    <div class="columns equacols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt><span class="badmono">←</span> <em>or</em> h</dt>
          <dd>Scroll left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">→</span> <em>or</em> l</dt>
          <dd>Scroll right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">↑</span> <em>or</em> k</dt>
          <dd>Scroll up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">↓</span> <em>or</em> j</dt>
          <dd>Scroll down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Toggle visibility of head labels</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">←</span> <em>or</em> shift h</dt>
          <dd>Scroll all the way left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">→</span> <em>or</em> shift l</dt>
          <dd>Scroll all the way right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">↑</span> <em>or</em> shift k</dt>
          <dd>Scroll all the way up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">↓</span> <em>or</em> shift j</dt>
          <dd>Scroll all the way down</dd>
        </dl>
      </div><!-- /.column.last -->
    </div>
  </div>

  <div style='display:none'>
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first" style='display:none'>
        <h3>Source Code Browsing</h3>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Activates the file finder</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Jump to line</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>w</dt>
          <dd>Switch branch/tag</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>y</dt>
          <dd>Expand URL to its canonical form</dd>
        </dl>
      </div>
    </div>
  </div>
</div>

    <div id="markdown-help" class="instapaper_ignore readability-extra">
  <h2>Markdown Cheat Sheet</h2>

  <div class="cheatsheet-content">

  <div class="mod">
    <div class="col">
      <h3>Format Text</h3>
      <p>Headers</p>
      <pre>
# This is an &lt;h1&gt; tag
## This is an &lt;h2&gt; tag
###### This is an &lt;h6&gt; tag</pre>
     <p>Text styles</p>
     <pre>
*This text will be italic*
_This will also be italic_
**This text will be bold**
__This will also be bold__

*You **can** combine them*
</pre>
    </div>
    <div class="col">
      <h3>Lists</h3>
      <p>Unordered</p>
      <pre>
* Item 1
* Item 2
  * Item 2a
  * Item 2b</pre>
     <p>Ordered</p>
     <pre>
1. Item 1
2. Item 2
3. Item 3
   * Item 3a
   * Item 3b</pre>
    </div>
    <div class="col">
      <h3>Miscellaneous</h3>
      <p>Images</p>
      <pre>
![GitHub Logo](/images/logo.png)
Format: ![Alt Text](url)
</pre>
     <p>Links</p>
     <pre>
http://github.com - automatic!
[GitHub](http://github.com)</pre>
<p>Blockquotes</p>
     <pre>
As Kanye West said:

> We're living the future so
> the present is our past.
</pre>
    </div>
  </div>
  <div class="rule"></div>

  <h3>Code Examples in Markdown</h3>
  <div class="col">
      <p>Syntax highlighting with <a href="http://github.github.com/github-flavored-markdown/" title="GitHub Flavored Markdown" target="_blank">GFM</a></p>
      <pre>
```javascript
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:'#foo'})
  }
}
```</pre>
    </div>
    <div class="col">
      <p>Or, indent your code 4 spaces</p>
      <pre>
Here is a Python code example
without syntax highlighting:

    def foo:
      if not bar:
        return true</pre>
    </div>
    <div class="col">
      <p>Inline code for comments</p>
      <pre>
I think you should use an
`&lt;addr&gt;` element here instead.</pre>
    </div>
  </div>

  </div>
</div>


    <div class="ajax-error-message">
      <p><span class="icon"></span> Something went wrong with that request. Please try again. <a href="javascript:;" class="ajax-error-dismiss">Dismiss</a></p>
    </div>

    
    
    
  </body>
</html>

