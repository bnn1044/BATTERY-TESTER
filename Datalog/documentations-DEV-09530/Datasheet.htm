


<!DOCTYPE html>
<html>
  <head>
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="chrome=1">
        <title>Datasheet - GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />

    
    

    <meta content="authenticity_token" name="csrf-param" />
<meta content="gYx8NNdwY6pH0ZeM1TSkE5JpMV9JWg1+TePShvgzu0w=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/stylesheets/bundles/github-4a66179db6f6804b8f0d60c4bb581271fadd27cb.css" media="screen" rel="stylesheet" type="text/css" />
    

    <script src="https://a248.e.akamai.net/assets.github.com/javascripts/bundles/jquery-e46225f266eba00902b2e5b66fe6fe6a484fb242.js" type="text/javascript"></script>
    <script src="https://a248.e.akamai.net/assets.github.com/javascripts/bundles/github-a6e5ad89d200a038912bb6e9cb13215234fa1498.js" type="text/javascript"></script>
    

      <script src="https://a248.e.akamai.net/assets.github.com/javascripts/bundles/wiki-1c139ac7d77d6f4dca973fc264bb263cffb3a1f2.js" type="text/javascript"></script>

    <meta name="description" content="OpenLog - Open Source Hardware Datalogger" />
  <link href="https://github.com/nseidle/OpenLog/commits/master.atom" rel="alternate" title="Recent Commits to OpenLog:master" type="application/atom+xml" />

  </head>


  <body class="logged_out  windows  env-production ">
    


    

      <div id="header" class="true clearfix">
        <div class="container clearfix">
          <a class="site-logo" href="https://github.com">
            <!--[if IE]>
            <img alt="GitHub" class="github-logo" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7.png?1323882717" />
            <img alt="GitHub" class="github-logo-hover" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7-hover.png?1324325376" />
            <![endif]-->
            <img alt="GitHub" class="github-logo-4x" height="30" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x.png?1323882717" />
            <img alt="GitHub" class="github-logo-4x-hover" height="30" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x-hover.png?1324325376" />
          </a>

                  <!--
      make sure to use fully qualified URLs here since this nav
      is used on error pages on other domains
    -->
    <ul class="top-nav logged_out">
        <li class="pricing"><a href="https://github.com/plans">Signup and Pricing</a></li>
        <li class="explore"><a href="https://github.com/explore">Explore GitHub</a></li>
      <li class="features"><a href="https://github.com/features">Features</a></li>
        <li class="blog"><a href="https://github.com/blog">Blog</a></li>
      <li class="login"><a href="https://github.com/login?return_to=%2Fnseidle%2FOpenLog%2Fwiki%2FDatasheet">Login</a></li>
    </ul>



          
        </div>
      </div>

      

            <div class="site">
      <div class="container">
        <div class="pagehead repohead instapaper_ignore readability-menu">


        <div class="title-actions-bar">
          <h1>
            <a href="/nseidle">nseidle</a> /
            <strong><a href="/nseidle/OpenLog" class="js-current-repository">OpenLog</a></strong>
          </h1>
          



              <ul class="pagehead-actions">


          <li><a href="/login?return_to=%2Fnseidle%2FOpenLog" class="minibutton btn-watch watch-button entice tooltipped leftwards" rel="nofollow" title="You must be logged in to use this feature"><span><span class="icon"></span>Watch</span></a></li>
          <li><a href="/login?return_to=%2Fnseidle%2FOpenLog" class="minibutton btn-fork fork-button entice tooltipped leftwards" rel="nofollow" title="You must be logged in to use this feature"><span><span class="icon"></span>Fork</span></a></li>


      <li class="repostats">
        <ul class="repo-stats">
          <li class="watchers ">
            <a href="/nseidle/OpenLog/watchers" title="Watchers" class="tooltipped downwards">
              53
            </a>
          </li>
          <li class="forks">
            <a href="/nseidle/OpenLog/network" title="Forks" class="tooltipped downwards">
              15
            </a>
          </li>
        </ul>
      </li>
    </ul>

        </div>

          

  <ul class="tabs">
    <li><a href="/nseidle/OpenLog" highlight="repo_sourcerepo_downloadsrepo_commitsrepo_tagsrepo_branches">Code</a></li>
    <li><a href="/nseidle/OpenLog/network" highlight="repo_networkrepo_fork_queue">Network</a>
    <li><a href="/nseidle/OpenLog/pulls" highlight="repo_pulls">Pull Requests <span class='counter'>0</span></a></li>

      <li><a href="/nseidle/OpenLog/issues" highlight="repo_issues">Issues <span class='counter'>7</span></a></li>

      <li><a href="/nseidle/OpenLog/wiki" class="selected" highlight="repo_wiki">Wiki <span class='counter'>9</span></a></li>

    <li><a href="/nseidle/OpenLog/graphs" highlight="repo_graphsrepo_contributors">Stats &amp; Graphs</a></li>

  </ul>

  
  
  
  <div class="subnav-bar">
  <ul class="subnav">
    <li><a href="/nseidle/OpenLog/wiki">Home</a></li>
    <li><a href="/nseidle/OpenLog/wiki/_pages">Pages</a></li>
    <li><a href="/nseidle/OpenLog/wiki/_history">Wiki History</a></li>
    <li><a href="/nseidle/OpenLog/wiki/_access">Git Access</a></li>
  </ul>
</div>


          

        </div><!-- /.repohead -->

        




<div id="wiki-wrapper" class="page">
<div id="head">
  <h1 class="instapaper_title">Datasheet</h1>
  <ul class="wiki-actions readability-extra">
    <li class="gollum-minibutton"><a href="/nseidle/OpenLog/wiki/Datasheet/_history"
       class="action-page-history">
       Page History
     </a></li>
  </ul>
</div>
<div id="wiki-content">
  <div class="wrap">
  <div id="wiki-body" class="gollum-textile-content instapaper_body">
    <div class="markdown-body">
      <p>OpenLog is a simple serial logger based on the ATmega328 running at 16MHz. OpenLog is able to talk to very large capacity (tested up to 16GB) SD cards. The whole purpose of this logger was to create a logger that just powered up and worked. OpenLog ships with a standard serial bootloader so you can load new firmware with a simple serial connection.</p>
<h3>The Basics</h3>
<ul>
<li>OpenLog runs at 3.3-5V at 9600bps by default. This is configurable to 2400, 4800, 9600, 19200, 57600, and 115200bps. We recommend you modify the <a href="https://github.com/nseidle/OpenLog/wiki/Config-File">config file</a> to work at a different serial speed, but you can also reconfigure OpenLog via software commands. See the <a href="https://github.com/nseidle/OpenLog/tree/master/OpenLog_CommandTest">command example sketch</a> for more information.</li>
	<li>The microSD card can be any size from 64MB to 16GB. Before using OpenLog be sure to format the card either FAT16 or FAT32. We recommend using windows to format your card. If using Linux, be sure to <a href="https://github.com/nseidle/OpenLog/issues/64">create a <span class="caps">DOS</span> filesystem</a> after formatting the card.</li>
	<li>During power up, you will see <strong>12&gt;</strong> or <strong>12&lt;</strong>. <strong>1</strong> indicates the serial connection is established. <strong>2</strong> indicates the SD card has been successfully initialized.
	<ul>
<li>‘<strong>&lt;</strong>’ indicates OpenLog is ready and will log any serial data received (this is the default mode)</li>
		<li>‘<strong>&gt;</strong>’ indicates OpenLog is ready to receive commands.</li>
	</ul>
</li>
	<li>Type <strong>?</strong> at the <strong>&gt;</strong> prompt to bring up a list of supported commands.</li>
	<li>If you are actively logging in NewLog or SeqLog mode, sending Ctrl+z (<span class="caps">ASCII</span> 26) three times will exit logging mode and enter command mode.</li>
	<li>For a full list of commands, see the <a href="http://wiki.github.com/nseidle/OpenLog/command-set">Command Set</a> page.</li>
</ul><p><img src="https://github.com/downloads/nseidle/OpenLog/OpenLog-Pinout.jpg" alt=""><br></p><h3>Connections</h3>
<ul>
<li>
<strong><span class="caps">GRN</span></strong>: Reset pin and connects to the <strong><span class="caps">GRN</span></strong> pin on the Arduino Pro Mini. Pulling this line low will reset the ATmega328. Because there is a capacitor on this line, holding this line low will <em>not</em> keep OpenLog in reset.</li>
	<li>
<strong><span class="caps">RXI</span></strong>: Serial input into OpenLog.</li>
	<li>
<strong><span class="caps">TXO</span></strong>: Serial output from OpenLog.</li>
	<li>
<strong><span class="caps">VCC</span></strong>: 3.3V to 12V input. We recommend 3.3V to 5V.</li>
	<li>
<strong><span class="caps">GND</span></strong>: Ground</li>
	<li>
<strong><span class="caps">BLK</span></strong>: This pin is connected to <span class="caps">GND</span>. Connect this pin to <strong><span class="caps">BLK</span></strong> on the Arduino Pro Mini.</li>
</ul><p>The four pins shown at the top of the board are connected to the <span class="caps">SPI</span> pins for programming. We use a special <a href="http://www.sparkfun.com/commerce/tutorial_info.php?tutorials_id=138">pogo-pin jig</a> to program the serial bootloader onto each board. You are welcome to connect to them but realize the <span class="caps">SPI</span> pins are shared with the interface to the SD socket so you might not want to use them as GPIOs.</p>
<p><img src="https://github.com/downloads/nseidle/OpenLog/OpenLog-Pinout.jpg" alt=""><br></p><h3>Status LEDs</h3>
<ul>
<li>STAT1 <span class="caps">LED</span> is the <span class="caps">LED</span> shown above, right of the word OpenLog and is sitting on PD5 (Arduino D5)<br>
This <span class="caps">LED</span> toggles on/off every time a new character is received. This <span class="caps">LED</span> helps troubleshoot and indicate serial communication is working.</li>
	<li>STAT2 <span class="caps">LED</span> is the <span class="caps">LED</span> shown above, left of the word OpenLog and is sitting on PB5 (Arduino D13)<br>
This <span class="caps">LED</span> is attached to the <span class="caps">SPI</span> Serial Clock line. You will see this <span class="caps">LED</span> flash rarely. It only turns on when the <span class="caps">SPI</span> interface is active and this is rare as the OpenLog buffers 512 bytes at a time before recording to the SD card. Recording 512 bytes is very fast so the <span class="caps">LED</span> is on for very little.</li>
</ul><h3>Features</h3>
<ul>
<li>Supports automatic log generation and recording. Turn on OpenLog, wait ~2 seconds and start throwing text at it!</li>
	<li>Supports <strong>2400</strong>, <strong>4800</strong>, <strong>9600</strong>, <strong>19200</strong>, <strong>38400</strong>, <strong>57600</strong>, and <strong>115200</strong> serial baud rates at 8-N-1.</li>
	<li>Supports creating a new file or directory up to 16 characters including the ‘.’ and extension. “123456789012.txt” is the longest name. Any longer and the module will re-initialize as if there was a variable sizeof error.</li>
	<li>Capital letters, white space, and other characters are supported (“Hi there#$_.txt”).</li>
	<li>Recording constant 115200bps datastreams are supported. Throw it everything you’ve got!</li>
	<li>The change directory command is a bit weird. Normally it’s ‘cd..’ but to change to a lower dir, use ‘cd ..’ (space between cd and ..)</li>
	<li>If you get OpenLog stuck into an unknown baudrate, there is a safety mechanism built-in. Tie the RX pin to ground and power up OpenLog. You should see the LEDs blink back and forth for 2 seconds, then blink in unison. Now power down OpenLog and remove the RX/<span class="caps">GND</span> jumper. OpenLog is now reset to 9600bps with an escape character of ctrl+z sent three consecutive times.</li>
	<li>Pre-programmed STK500 (Arduino compatible) serial bootloader running at 57600bps @ 16MHz</li>
</ul><p>Please note: The preloaded STK500 serial bootloader is 2k bytes of flash, and begins at 0×7800 (30,720). If you are modifying the stock OpenLog firmware and the new code is larger than 30,719 bytes, you will get verification errors during serial bootloading. <strong>Warning:</strong> some early units (sold in December of 2009) of OpenLog did not have a bootblock protection lock bit set and will overwrite the bootloader. To check if you have one of these versions, drop to command mode and type ‘<strong>?</strong>’. The OpenLog firmware version number is shown at the top of the menu. Everything after v1.0 (v1.1 and above) is good and does not have this problem.</p>
<h3>Power</h3>
<p>Input voltage on <span class="caps">VCC</span> can be 3.3 to 12V. Input voltage on <strong><span class="caps">RXI</span></strong> pin must not exceed 6V. Output voltage on <strong><span class="caps">TXO</span></strong> pin will not be greater than 3.3V. This may cause problems with some systems – for example if your attached microcontroller requires 4V minimum for serial communication (this is rare).</p>
<p>OpenLog has reverse power protection. The Micrel voltage regulator can take some serious abuse (reverse power applied, over current shut down, over voltage protection). All parts are static sensitive, but the ATmega328 and Micrel regulator have built-in static protection.</p>
<p><strong>Current consumption:</strong></p>
<ul>
<li>2mA Idle</li>
	<li>6mA Actively writing to a file</li>
</ul><p>6mA is rare. The vast majority of the time OpenLog is idle. Writing to the SD card (6mA) happens once a 512 byte buffer fills up. Recording that buffer completes in a fraction of a second so the average consumption is very near 5mA unless you are pounding the serial port at 115200bps with a constant data stream.</p>
<p><strong>Note:</strong> OpenLog may lose characters if power is removed. During an append, OpenLog will buffer 512 characters at a time. That means that if the system loses power while reading in characters, you may loose up to, but no more than, 511 characters. This is important for low power systems where you may not know when the battery or power will die. OpenLog should record each buffer as it receives each 512 byte chunk. The only way to exit an append is with Ctrl+z (<span class="caps">ASCII</span> 26). In firmware v1.3 and above, OpenLog has an auto-store feature. If OpenLog is idle for 5 seconds or more, it will auto-save any characters in the buffer. This is very helpful for systems that store a few characters every few seconds. This feature also significantly saves on power.</p>
<h3>Dimensions</h3>
<p><img src="https://a248.e.akamai.net/assets.github.com/img/d6bc815eb97341360be6a12c2d16f27f737eac38/687474703a2f2f7374617469632e737061726b66756e2e636f6d2f696d616765732f70726f64756374732f30393533302d30315f695f6d612e6a7067" alt=""><br><img src="https://github.com/downloads/nseidle/OpenLog/OpenLog-Dimensional.jpg" alt=""></p>
<h3>Troubleshooting</h3>
<p>The easiest way to get OpenLog working is with a serial connection to a computer. Power up OpenLog and you should see ‘<strong>12&lt;</strong>’. If you don’t, make sure your <strong><span class="caps">TXO</span></strong> and <strong><span class="caps">RXI</span></strong> pins are connected correctly. <strong><span class="caps">TXO</span></strong> is an output pin from OpenLog and will need to be connected to a input pin on your serial conversion board.</p>
<p><strong>I don’t know what baud rate I put it into! Help! :</strong> Emergency reset – aka factory defaults. If you get OpenLog stuck into an unknown baud rate, there is a safety mechanism built-in. Tie the RX pin to ground and power up OpenLog. You should see the LEDs blink back and forth for 2 seconds, then blink in unison. Now power down OpenLog and remove the RX/<span class="caps">GND</span> jumper. OpenLog is now reset to 9600bps. After a power up you should see ‘<strong>12&lt;</strong>’. To get OpenLog into command mode, press ctrl+z three times.</p>
<p>OpenLog communicates with <span class="caps">TTL</span>, not RS232, because it is meant to be connected with a microcontroller or an embedded project. If you are connecting OpenLog to a computer, you will need a <span class="caps">TTL</span>-to-RS232 converter board such as the <a href="http://www.sparkfun.com/commerce/product_info.php?products_id=133">RS232 Shifter board</a>, <a href="http://www.sparkfun.com/commerce/product_info.php?products_id=9716"><span class="caps">FTDI</span> Basic</a>, or the <a href="http://www.sparkfun.com/commerce/product_info.php?products_id=718">FT232 Breakout</a>.</p>
<p>OpenLog has two onboard LEDs. STAT1 will blink with an error code if something is wrong. Currently there are two error codes:</p>
<ul>
<li>3 Blinks: The SD card failed to initialize. You may need to format the card with <span class="caps">FAT</span>/FAT16 on a computer.</li>
	<li>5 Blinks: OpenLog has changed to a new baud rate and needs to be power cycled.</li>
</ul><p>The <em>Card Detect</em> feature of the microSD socket is connected to the ATmega328 but we are not currently checking for physical presence. This is because there are some SD sockets that have this feature available, and some that do not. When we began production of OpenLog we were not sure which socket would be available so we skipped this check in the firmware.</p>
<p><strong>What is the limit on the number of files I can create in the root directory?</strong> <br>
Currently the log number limit is 65,534. You can load hundreds of files into the root directory, but OpenLog will perform more and more slowly as more files are introduced. We recommend logging to a freshly formatted FAT16 microSD card. 10 or 20 files/logs is fine. As you approach thousands of files OpenLog can take multiple seconds to create a new file and start to log.</p>
<p><strong>What is the limit of sub-directories I can create?</strong> <br>
Unknown at this time</p>
<p><strong>Example Arduino Code:</strong> <br>
The easiest way to use OpenLog with an Arduino is to simply attach the <span class="caps">RXI</span> pin on the OpenLog to the TX pin on the Arduino. Anything that the Arduino outputs (sensor readings, <span class="caps">GPS</span> coordinates, etc) will be recorded. <br><code>Serial.begin(9600); //9600bps is default for OpenLog</code><br><code>Serial.println("123");</code><br>
will cause the Arduino to output ‘<strong>123</strong>’ at 9600bps and will be logged by OpenLog. An example Arduino sketch is available <a href="http://github.com/nseidle/OpenLog/raw/master/OpenLog_Test_Sketch/OpenLog_Test_Sketch.pde">here</a>.</p>
<p><strong>Example C Code:</strong> <br>
You will need to setup your microcontroller to output serial streams at 9600bps 8N1. Almost all microcontrollers now have a <span class="caps">UART</span> and are configurable for this setup.</p>
<p><strong>How do I attach a <a href="http://www.sparkfun.com/commerce/product_info.php?products_id=9115"><span class="caps">FTDI</span> Basic</a> board to OpenLog for configuring and bootloading?</strong><br>
You <em>can not</em> attach an <span class="caps">FTDI</span> Basic or <span class="caps">FTDI</span> Cable directly. This is because you have to swap TX and RX.</p>
<p><img src="https://github.com/downloads/nseidle/OpenLog/FTDI-Connections.jpg" alt=""><br>
Note that these images are not to scale. The <span class="caps">FTDI</span> board is exactly the width of OpenLog. If you can generate a nicer image please do so!</p>
<p><img src="https://github.com/downloads/nseidle/OpenLog/OpenLog-to-FTDI-Basic.jpg" alt=""><br>
Thanks for the live shot Michael! Notice that he uses unsoldered wires. This works but can be a bit finicky (disclaimer).</p>
<p>A picture showing OpenLog in a bread board or a clean diagram using Fritzing would rock. If you can create some of these images, it would help out a lot. Please help!</p>
<p>But once you’ve swapped TX/RX, you can easily use an <span class="caps">FTDI</span> Basic to talk to, configure, and quickly bootload new firmware onto OpenLog.</p>
<p><strong>Why in the world did you do mess up TX and RX like that?</strong><br>
Most of the data logging projects (such as logging the temperature of your compost pile over 3 months) take place away from a computer. Therefore, OpenLog will probably not be connected to a computer – instead, it will likely be connected to a microcontroller. We made OpenLog so that it can plug directly onto an <a href="http://www.sparkfun.com/commerce/product_info.php?products_id=9220">Arduino Mini Pro</a></p>
<p><strong>How do I upgrade the firmware on OpenLog?</strong> <br>
See the <a href="http://wiki.github.com/nseidle/OpenLog/flashing-firmware">Flashing Firmware</a> page for more information.</p>
<p><strong>How do I compile OpenLog?</strong><br>
See the <a href="http://wiki.github.com/nseidle/OpenLog/flashing-firmware">Flashing Firmware</a> page for more information.</p>
<p><strong>OpenLog Wiki Pages:</strong></p>
<ul>
<li><a class="internal present" href="/nseidle/OpenLog/wiki/Command-Set">Command Set</a></li>
	<li><a class="internal present" href="/nseidle/OpenLog/wiki/Config-File">Config File</a></li>
	<li><a class="internal present" href="/nseidle/OpenLog/wiki/Datasheet">Datasheet</a></li>
	<li><a class="internal present" href="/nseidle/OpenLog/wiki/Design-Files">Design Files</a></li>
	<li><a class="internal present" href="/nseidle/OpenLog/wiki/Flashing-Firmware">Flashing Firmware</a></li>
</ul>
    </div>
  </div>
  </div>

</div>
<div id="gollum-footer">
  <p id="last-edit">
    Last edited by nseidle, <time class="js-relative-date" datetime="2011-11-09T09:55:40-08:00" title="2011-11-09 09:55:40">November 09, 2011</time>
  </p>
</div>
</div>


      </div>
      <div class="context-overlay"></div>
    </div>


    <!-- footer -->
    <div id="footer" >
      
  <div class="upper_footer">
     <div class="container clearfix">

       <!--[if IE]><h4 id="blacktocat_ie">GitHub Links</h4><![endif]-->
       <![if !IE]><h4 id="blacktocat">GitHub Links</h4><![endif]>

       <ul class="footer_nav">
         <h4>GitHub</h4>
         <li><a href="https://github.com/about">About</a></li>
         <li><a href="https://github.com/blog">Blog</a></li>
         <li><a href="https://github.com/features">Features</a></li>
         <li><a href="https://github.com/contact">Contact &amp; Support</a></li>
         <li><a href="https://github.com/training">Training</a></li>
         <li><a href="http://enterprise.github.com/">GitHub Enterprise</a></li>
         <li><a href="http://status.github.com/">Site Status</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Tools</h4>
         <li><a href="http://get.gaug.es/">Gauges: Analyze web traffic</a></li>
         <li><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></li>
         <li><a href="https://gist.github.com">Gist: Code snippets</a></li>
         <li><a href="http://mac.github.com/">GitHub for Mac</a></li>
         <li><a href="http://mobile.github.com/">Issues for iPhone</a></li>
         <li><a href="http://jobs.github.com/">Job Board</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Extras</h4>
         <li><a href="http://shop.github.com/">GitHub Shop</a></li>
         <li><a href="http://octodex.github.com/">The Octodex</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Documentation</h4>
         <li><a href="http://help.github.com/">GitHub Help</a></li>
         <li><a href="http://developer.github.com/">Developer API</a></li>
         <li><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></li>
         <li><a href="http://pages.github.com/">GitHub Pages</a></li>
       </ul>

     </div><!-- /.site -->
  </div><!-- /.upper_footer -->

<div class="lower_footer">
  <div class="container clearfix">
    <!--[if IE]><div id="legal_ie"><![endif]-->
    <![if !IE]><div id="legal"><![endif]>
      <ul>
          <li><a href="https://github.com/site/terms">Terms of Service</a></li>
          <li><a href="https://github.com/site/privacy">Privacy</a></li>
          <li><a href="https://github.com/security">Security</a></li>
      </ul>

      <p>&copy; 2012 <span id="_rrt" title="0.08080s from fe11.rs.github.com">GitHub</span> Inc. All rights reserved.</p>
    </div><!-- /#legal or /#legal_ie-->

      <div class="sponsor">
        <a href="http://www.rackspace.com" class="logo">
          <img alt="Dedicated Server" height="36" src="https://a248.e.akamai.net/assets.github.com/images/modules/footer/rackspace_logo.png?v2" width="38" />
        </a>
        Powered by the <a href="http://www.rackspace.com ">Dedicated
        Servers</a> and<br/> <a href="http://www.rackspacecloud.com">Cloud
        Computing</a> of Rackspace Hosting<span>&reg;</span>
      </div>
  </div><!-- /.site -->
</div><!-- /.lower_footer -->

    </div><!-- /#footer -->

    

<div id="keyboard_shortcuts_pane" class="instapaper_ignore readability-extra" style="display:none">
  <h2>Keyboard Shortcuts <small><a href="#" class="js-see-all-keyboard-shortcuts">(see all)</a></small></h2>

  <div class="columns threecols">
    <div class="column first">
      <h3>Site wide shortcuts</h3>
      <dl class="keyboard-mappings">
        <dt>s</dt>
        <dd>Focus site search</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>?</dt>
        <dd>Bring up this help dialog</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column middle" style='display:none'>
      <h3>Commit list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>c <em>or</em> o <em>or</em> enter</dt>
        <dd>Open commit</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>y</dt>
        <dd>Expand URL to its canonical form</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column last" style='display:none'>
      <h3>Pull request list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>o <em>or</em> enter</dt>
        <dd>Open issue</dd>
      </dl>
    </div><!-- /.columns.last -->

  </div><!-- /.columns.equacols -->

  <div style='display:none'>
    <div class="rule"></div>

    <h3>Issues</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>x</dt>
          <dd>Toggle selection</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column middle">
        <dl class="keyboard-mappings">
          <dt>I</dt>
          <dd>Mark selection as read</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>U</dt>
          <dd>Mark selection as unread</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>e</dt>
          <dd>Close selection</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>y</dt>
          <dd>Remove selection from view</dd>
        </dl>
      </div><!-- /.column.middle -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>c</dt>
          <dd>Create issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Create label</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>i</dt>
          <dd>Back to inbox</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>u</dt>
          <dd>Back to issues</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>/</dt>
          <dd>Focus issues search</dd>
        </dl>
      </div>
    </div>
  </div>

  <div style='display:none'>
    <div class="rule"></div>

    <h3>Issues Dashboard</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
      </div><!-- /.column.first -->
    </div>
  </div>

  <div style='display:none'>
    <div class="rule"></div>

    <h3>Network Graph</h3>
    <div class="columns equacols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt><span class="badmono">←</span> <em>or</em> h</dt>
          <dd>Scroll left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">→</span> <em>or</em> l</dt>
          <dd>Scroll right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">↑</span> <em>or</em> k</dt>
          <dd>Scroll up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">↓</span> <em>or</em> j</dt>
          <dd>Scroll down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Toggle visibility of head labels</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">←</span> <em>or</em> shift h</dt>
          <dd>Scroll all the way left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">→</span> <em>or</em> shift l</dt>
          <dd>Scroll all the way right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">↑</span> <em>or</em> shift k</dt>
          <dd>Scroll all the way up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">↓</span> <em>or</em> shift j</dt>
          <dd>Scroll all the way down</dd>
        </dl>
      </div><!-- /.column.last -->
    </div>
  </div>

  <div style='display:none'>
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first" style='display:none'>
        <h3>Source Code Browsing</h3>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Activates the file finder</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Jump to line</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>w</dt>
          <dd>Switch branch/tag</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>y</dt>
          <dd>Expand URL to its canonical form</dd>
        </dl>
      </div>
    </div>
  </div>
</div>

    <div id="markdown-help" class="instapaper_ignore readability-extra">
  <h2>Markdown Cheat Sheet</h2>

  <div class="cheatsheet-content">

  <div class="mod">
    <div class="col">
      <h3>Format Text</h3>
      <p>Headers</p>
      <pre>
# This is an &lt;h1&gt; tag
## This is an &lt;h2&gt; tag
###### This is an &lt;h6&gt; tag</pre>
     <p>Text styles</p>
     <pre>
*This text will be italic*
_This will also be italic_
**This text will be bold**
__This will also be bold__

*You **can** combine them*
</pre>
    </div>
    <div class="col">
      <h3>Lists</h3>
      <p>Unordered</p>
      <pre>
* Item 1
* Item 2
  * Item 2a
  * Item 2b</pre>
     <p>Ordered</p>
     <pre>
1. Item 1
2. Item 2
3. Item 3
   * Item 3a
   * Item 3b</pre>
    </div>
    <div class="col">
      <h3>Miscellaneous</h3>
      <p>Images</p>
      <pre>
![GitHub Logo](/images/logo.png)
Format: ![Alt Text](url)
</pre>
     <p>Links</p>
     <pre>
http://github.com - automatic!
[GitHub](http://github.com)</pre>
<p>Blockquotes</p>
     <pre>
As Kanye West said:

> We're living the future so
> the present is our past.
</pre>
    </div>
  </div>
  <div class="rule"></div>

  <h3>Code Examples in Markdown</h3>
  <div class="col">
      <p>Syntax highlighting with <a href="http://github.github.com/github-flavored-markdown/" title="GitHub Flavored Markdown" target="_blank">GFM</a></p>
      <pre>
```javascript
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:'#foo'})
  }
}
```</pre>
    </div>
    <div class="col">
      <p>Or, indent your code 4 spaces</p>
      <pre>
Here is a Python code example
without syntax highlighting:

    def foo:
      if not bar:
        return true</pre>
    </div>
    <div class="col">
      <p>Inline code for comments</p>
      <pre>
I think you should use an
`&lt;addr&gt;` element here instead.</pre>
    </div>
  </div>

  </div>
</div>


    <div class="ajax-error-message">
      <p><span class="icon"></span> Something went wrong with that request. Please try again. <a href="javascript:;" class="ajax-error-dismiss">Dismiss</a></p>
    </div>

    
    
    
  </body>
</html>

